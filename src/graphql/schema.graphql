type ContentOutput {
  text: String
  level: Float
  items: JSON
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Block {
  id: String!
  type: String!
  data: ContentOutput
  order: Float!
}

type Content {
  title: String!
  blocks: [Block!]!
  author: String!
  associatedType: String
  associatedId: String
  published: Boolean!
  publishedAt: DateTime
  permissions: [String!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Category {
  _id: ID!
  name: String!
  slug: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Tag {
  _id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  getAllContent: [Content!]!
  getContentById(id: String!): Content!
  getAllCategories: [Category!]!
  getAllTags: [Tag!]!
}

type Mutation {
  createContent(createContentDto: CreateContentDto!): Content!
  updateContent(id: String!, updateContentDto: UpdateContentDto!): Content!
  deleteContent(id: String!): Boolean!
  createCategory(createCategoryDto: CreateCategoryDto!): Category!
  deleteCategory(id: String!): Category!
  updateCategory(id: String!, updateCategoryDto: UpdateCategoryDto!): Category!
  createTag(createTagDto: CreateTagDto!): Tag!
  deleteTag(id: String!): Tag!
  updateTag(id: String!, updateTagDto: UpdateTagDto!): Tag!
}

input CreateContentDto {
  title: String!
  blocks: [BlockDto!]!
  associatedType: String = "page"
  associatedId: String
}

input BlockDto {
  id: String!
  type: String!
  data: ContentInput
  order: Float!
}

input ContentInput {
  text: String
  level: Float
  items: JSON
}

input UpdateContentDto {
  title: String
  blocks: [BlockDto!]
  associatedType: String
  associatedId: String
}

input CreateCategoryDto {
  name: String!
  slug: String!
}

input UpdateCategoryDto {
  name: String
  slug: String
}

input CreateTagDto {
  name: String!
}

input UpdateTagDto {
  name: String
}
